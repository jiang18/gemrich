% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/renormalize_prob_by_enrichment.R
\name{renormalize_prob_by_enrichment}
\alias{renormalize_prob_by_enrichment}
\title{Renormalize Fine-Mapping Probabilities Using Functional Enrichment Estimates}
\usage{
renormalize_prob_by_enrichment(
  bfmap,
  snpinfo,
  enrichment_mle,
  annot = "multi_cat",
  input_type = "forward_selection"
)
}
\arguments{
\item{bfmap}{A \code{data.frame} or \code{data.table} containing fine-mapping summary data.
For forward selection: Required columns are signal, normedProb, and SNPname.
For SSS: columns should be locus ID, variant names, logbf, and model probabilities.}

\item{snpinfo}{A \code{data.frame} or \code{data.table} containing SNP functional annotation data, which can be generated using \code{map_snp_annotation()}.}

\item{enrichment_mle}{A \code{data.frame} of enrichment estimates from estimate_category_enrichment(),
containing fold enrichments of genetic effects across functional annotation categories.}

\item{annot}{A character string specifying a functional annotation column in snpinfo (default: "multi_cat").}

\item{input_type}{Character string specifying the input format: "forward_selection" (default) or "sss".}
}
\value{
For forward selection: A \code{data.table} with renormalized probabilities (renormedProb).
For SSS: A list containing $model (renormalized model probabilities) and $pip (posterior inclusion probabilities for variants).
}
\description{
This function takes probabilities from fine-mapping and renormalizes them using functional
enrichment estimates. For forward selection, SNP probabilities are renormalized within each
signal. For SSS, model probabilities are renormalized within each locus and variant PIPs
are calculated.
}
\examples{
data("dairy_example")
mle_result <- estimate_category_enrichment(
  dairy_example$bfmap,
  dairy_example$snp2annot,
  dairy_example$cat_prop
)
# Forward selection
renormed_bfmap <- renormalize_prob_by_enrichment(
  dairy_example$bfmap,
  dairy_example$snp2annot,
  mle_result$enrichment_mle
)
# SSS
# renormed_sss <- renormalize_prob_by_enrichment(
#   sss_data,
#   snp2annot,
#   mle_result$enrichment_mle,
#   input_type = "sss"
# )

}
